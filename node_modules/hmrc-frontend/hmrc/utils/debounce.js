(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define('HMRCFrontend', ['exports'], factory) :
  (factory((global.HMRCFrontend = {})));
}(this, (function (exports) { 'use strict';

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  // eslint-disable-next-line  import/prefer-default-export
  function debounce(func, wait, immediate) {
    var _this = this;

    var timeout;
    return function () {
      for (var _len = arguments.length, theParams = new Array(_len), _key = 0; _key < _len; _key++) {
        theParams[_key] = arguments[_key];
      }

      var context = _this;

      var later = function later() {
        timeout = null;
        if (!immediate) func.apply(context, theParams);
      };

      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) func.apply(context, theParams);
    };
  }

  exports.debounce = debounce;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
